# nginx version: 1.25-alpine

# Global settings
worker_processes auto;
worker_rlimit_nofile 65535;
pid /var/run/nginx.pid;

# Event loop optimization
events {
    worker_connections 10000;
    multi_accept on;
    use epoll;
}

# HTTP server configuration
http {
    # Basic settings
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    
    # Performance optimizations
    keepalive_timeout 65;
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    client_max_body_size 50M;
    types_hash_max_size 2048;
    server_tokens off;

    # Logging configuration
    error_log /var/log/nginx/error.log warn;
    access_log /var/log/nginx/access.log combined buffer=512k flush=1m;
    
    log_format main '$remote_addr - $remote_user [$time_local] "$request" $status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';
    log_format detailed '$remote_addr - $remote_user [$time_local] "$request" $status $body_bytes_sent "$http_referer" '
                        '"$http_user_agent" "$http_x_forwarded_for" $request_time $upstream_response_time $pipe';

    # Compression settings
    gzip on;
    gzip_comp_level 6;
    gzip_min_length 1000;
    gzip_types text/plain text/css application/json application/javascript text/xml
               application/xml application/xml+rss text/javascript image/svg+xml
               application/vnd.ms-fontobject application/x-font-ttf font/opentype;
    gzip_vary on;
    gzip_proxied any;
    gzip_buffers 16 8k;

    # Rate limiting configuration
    limit_req_zone $binary_remote_addr zone=memoryreel_limit:10m rate=100r/s;
    limit_req_status 429;
    
    # Proxy cache configuration
    proxy_cache_path /var/cache/nginx levels=1:2 keys_zone=memoryreel_cache:10m
                     max_size=10g inactive=60m use_temp_path=off;
    proxy_cache_valid 200 301 302 60m;
    proxy_cache_min_uses 2;
    proxy_cache_use_stale error timeout http_500 http_502 http_503 http_504;
    proxy_cache_background_update on;

    # Main server configuration
    server {
        listen 80;
        server_name _;
        root /usr/share/nginx/html;
        
        # Security headers
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
        add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://*.memoryreel.com; style-src 'self' 'unsafe-inline' https://*.memoryreel.com; img-src 'self' data: https: blob:; font-src 'self' data: https://*.memoryreel.com; connect-src 'self' https://*.memoryreel.com wss://*.memoryreel.com; media-src 'self' blob: https://*.memoryreel.com; object-src 'none'; frame-ancestors 'self'; base-uri 'self'; form-action 'self'" always;
        add_header Permissions-Policy "camera=(), microphone=(), geolocation=(), payment=()" always;

        # Rate limiting
        limit_req zone=memoryreel_limit burst=200 nodelay;

        # Browser caching
        location ~* \.(jpg|jpeg|png|gif|ico|css|js|svg|woff|woff2|ttf|eot)$ {
            expires 1y;
            add_header Cache-Control "public, no-transform";
            add_header Vary "Accept-Encoding";
        }

        # SPA configuration
        location / {
            try_files $uri $uri/ /index.html;
            expires 1h;
            add_header Cache-Control "public, no-transform";
            add_header Vary "Accept-Encoding";
        }

        # API proxy configuration
        location /api/ {
            proxy_pass http://api-service;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache memoryreel_cache;
            proxy_cache_bypass $http_pragma;
            proxy_cache_revalidate on;
            proxy_buffering on;
            proxy_buffer_size 8k;
            proxy_buffers 8 8k;
        }

        # Health check endpoint
        location /health {
            access_log off;
            return 200 'healthy\n';
        }

        # Error pages
        error_page 404 /404.html;
        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
            root /usr/share/nginx/html;
        }
    }
}