apiVersion: apps/v1
kind: Deployment
metadata:
  name: memoryreel-backend
  namespace: memoryreel
  labels:
    app: memoryreel
    component: backend
    managed-by: kustomize
    version: v1
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: memoryreel
      component: backend
  template:
    metadata:
      labels:
        app: memoryreel
        component: backend
        version: v1
      annotations:
        prometheus.io/scrape: 'true'
        prometheus.io/port: '3000'
        prometheus.io/path: '/metrics'
        checksum/config: '${CONFIG_CHECKSUM}'
        kubernetes.io/change-cause: 'Initial deployment'
    spec:
      containers:
      - name: backend
        image: docker.io/memoryreel/backend:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 3000
          protocol: TCP
          name: http
        resources:
          requests:
            cpu: "2"
            memory: "4Gi"
          limits:
            cpu: "4"
            memory: "8Gi"
        livenessProbe:
          httpGet:
            path: /health
            port: 3000
          initialDelaySeconds: 40
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
          successThreshold: 1
        readinessProbe:
          httpGet:
            path: /health
            port: 3000
          initialDelaySeconds: 20
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 2
          successThreshold: 1
        env:
        - name: NODE_ENV
          value: 'production'
        - name: PORT
          value: '3000'
        - name: LOG_LEVEL
          value: 'info'
      securityContext:
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      terminationGracePeriodSeconds: 60